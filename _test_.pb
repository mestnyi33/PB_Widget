;IncludePath "/Users/as/Documents/GitHub/Widget/"
XIncludeFile "_module_gadget.pb"

UseModule Gadget

;
; This code is automatically generated by the FormDesigner.
; Manual modification is possible to adjust existing commands, but anything else will be dropped when the code is compiled.
; Event procedures needs to be put in another source file.
;

Global Window_0

Global widget, Container_0, functions, flags, set, value, text, get, remove, clears, add, removes, adds

UsePNGImageDecoder()
  
If Not LoadImage(1, #PB_Compiler_Home + "examples/sources/Data/ToolBar/Paste.png") 
  End
  EndIf
  
Procedure events_tree_gadget()
  ;Debug " gadget - "+EventGadget()+" "+EventType()
  Static click
  Protected EventGadget = EventGadget()
  Protected EventType = EventType()
  Protected EventData = EventData()
  Protected EventItem = GetGadgetState(EventGadget)
  Protected State = GetGadgetItemState(EventGadget, EventItem)
  
  Select EventType
    Case #PB_EventType_Change
      Debug "#PB_EventType_Change - "+ EventGadget
      
      Select EventGadget 
        Case functions
          ClearGadgetItems(flags) 
          
          Select GetGadgetText(functions)
            Case "SetGadgetFlag_" 
              AddGadgetItem(flags, -1, "#PB_Tree_CheckBoxes")
              AddGadgetItem(flags, -1, "#PB_Tree_NoButtons")
              AddGadgetItem(flags, -1, "#PB_Tree_NoLines")
              AddGadgetItem(flags, -1, "#PB_Tree_ThreeState")
            
            Case "AddGadgetItem()" ; Add an item (With an optional picture in the standard 16x16 icon size). 
            Case "RemoveGadgetItem()" ; Remove an item (And all its child-items). 
              AddGadgetItem(flags, -1, "#All items") ;The item should be expanded.
              AddGadgetItem(flags, -1, "#Selected items") ;The item should be selected.
              
            Case "ClearGadgetItems()" ; Remove all the items. 
            Case "CountGadgetItems()" ; Return the number of items currently in the #Gadget. 
            Case "GetGadgetItemState()" ; Return the current state of the specified item. 
            Case "SetGadgetItemState()" ; Change the current state of the specified item. 
              AddGadgetItem(flags, -1, "#PB_Tree_Selected") ;The item should be selected.
              AddGadgetItem(flags, -1, "#PB_Tree_Expanded") ;The item should be expanded.
              AddGadgetItem(flags, -1, "#PB_Tree_Collapsed");The item should be collapsed. If neither AddGadgetItem(flags, -1, "#PB_Tree_Expanded nor AddGadgetItem(flags, -1, "#PB_Tree_Collapsed is set, this state will Not be changed.
              AddGadgetItem(flags, -1, "#PB_Tree_Checked")  ;The items checkbox should be checked.
              AddGadgetItem(flags, -1, "#PB_Tree_Inbetween");The items checkbox should be in the in between state.

            Case "GetGadgetItemText()"  ; Return the current text of the specified item. 
            Case "SetGadgetItemText()"  ; Change the current text of the specified item. 
            Case "SetGadgetItemImage()" ; Change the current image of the specified item. 
            Case "GetGadgetItemData()"  ; Returns the value that was stored With item. 
            Case "SetGadgetItemData()"  ; Stores a value With the item. 
            Case "GetGadgetItemColor()" ; Returns front Or backcolor of the item. 
            Case "SetGadgetItemColor()" ; Changes front Or backcolor of the item. (Not supported on MacOS X) 
            Case "GetGadgetState()"     ; Return the current selected item. 
            Case "SetGadgetState()"     ; Change the currently selected item. 
            Case "GetGadgetText()"      ; Return the text of the currently selected item. 
            Case "SetGadgetText()"      ; Change the text of the currently selected item. 
            Case "GetGadgetItemAttribute()" ; With the following attribute" ;
          EndSelect
          
       ;   Tree::Redraw(GetGadgetData(flags))
       
      EndSelect
      
     ; Tree::Redraw(GetGadgetData(widget))
      
    Case #PB_EventType_Repaint
      Debug "#PB_EventType_Repaint - "+ EventGadget
     ; Tree::Redraw(GetGadgetData(EventGadget))
      
  EndSelect 
  
  
;   Select EventType
;       ;     Case #PB_EventType_Focus    : Debug "gadget focus item = " + EventItem +" data "+ EventData
;       ;     Case #PB_EventType_LostFocus    : Debug "gadget lfocus item = " + EventItem +" data "+ EventData
;     Case #PB_EventType_LeftClick : Debug "gadget lclick item = " + EventItem +" data "+ EventData +" State "+ State
;     Case #PB_EventType_LeftDoubleClick : Debug "gadget ldclick item = " + EventItem +" data "+ EventData +" State "+ State
;     Case #PB_EventType_DragStart : Debug "gadget sdrag item = " + EventItem +" data "+ EventData +" State "+ State
;     Case #PB_EventType_Change    : Debug "gadget change item = " + EventItem +" data "+ EventData +" State "+ State
;     Case #PB_EventType_RightClick : Debug "gadget rclick item = " + EventItem +" data "+ EventData +" State "+ State
;     Case #PB_EventType_RightDoubleClick : Debug "gadget rdclick item = " + EventItem +" data "+ EventData +" State "+ State
;     Case #PB_EventType_Repaint
;       Debug 8888
;   EndSelect 
  
;   If EventType = #PB_EventType_LeftClick
;     If State & #PB_Tree_Selected
;       Debug "Selected "+#PB_Tree_Selected
;     EndIf
;     If State & #PB_Tree_Expanded
;       Debug "Expanded "+#PB_Tree_Expanded
;     EndIf
;     If State & #PB_Tree_Collapsed
;       Debug "Collapsed "+#PB_Tree_Collapsed
;     EndIf
;     If State & #PB_Tree_Checked
;       Debug "Checked "+#PB_Tree_Checked
;     EndIf
;     If State & #PB_Tree_Inbetween
;       Debug "Inbetween "+#PB_Tree_Inbetween
;     EndIf
;   EndIf

EndProcedure  


Procedure OpenWindow_0(x = 0, y = 0, width = 590, height = 380)
  Window_0 = OpenWindow(#PB_Any, x, y, width, height, "", #PB_Window_SystemMenu)
  widget = TreeGadget(#PB_Any, 10, 10, 280, 360)
  Container_0 = ContainerGadget(#PB_Any, 300, 10, 280, 360, #PB_Container_Flat)
  functions = TreeGadget(#PB_Any, 10, 10, 260, 170, #PB_Tree_NoLines | #PB_Tree_NoButtons)
  flags = TreeGadget(#PB_Any, 10, 190, 170, 140, #PB_Tree_NoLines | #PB_Tree_NoButtons | #PB_Tree_CheckBoxes)
  
  set = ButtonGadget(#PB_Any, 190, 190, 80, 20, "set")
  get = ButtonGadget(#PB_Any, 190, 210, 80, 20, "get")
  
  add = ButtonGadget(#PB_Any, 190, 240, 80, 20, "add")
  remove = ButtonGadget(#PB_Any, 190, 260, 80, 20, "remove")
  
  adds = ButtonGadget(#PB_Any, 190, 290, 80, 20, "adds")
  removes = ButtonGadget(#PB_Any, 190, 310, 80, 20, "removes")
  clears = ButtonGadget(#PB_Any, 190, 330, 80, 20, "clears")
  
  text = StringGadget(#PB_Any, 10, 330, 110, 20, "item_")
  value = StringGadget(#PB_Any, 120, 330, 60, 20, "1000")
  CloseGadgetList()
  
  BindGadgetEvent(functions, @events_tree_gadget())
  BindGadgetEvent(flags, @events_tree_gadget())
  
  AddGadgetItem(functions, -1, "SetGadgetFlag_")
  AddGadgetItem(functions, -1, "AddGadgetItem()") ; Add an item (With an optional picture in the standard 16x16 icon size). 
  AddGadgetItem(functions, -1, "RemoveGadgetItem()") ; Remove an item (And all its child-items). 
  AddGadgetItem(functions, -1, "ClearGadgetItems()") ; Remove all the items. 
  AddGadgetItem(functions, -1, "CountGadgetItems()") ; Return the number of items currently in the #Gadget. 
  AddGadgetItem(functions, -1, "GetGadgetItemState()") ; Return the current state of the specified item. 
  AddGadgetItem(functions, -1, "SetGadgetItemState()") ; Change the current state of the specified item. 
  AddGadgetItem(functions, -1, "GetGadgetItemText()")  ; Return the current text of the specified item. 
  AddGadgetItem(functions, -1, "SetGadgetItemText()")  ; Change the current text of the specified item. 
  AddGadgetItem(functions, -1, "SetGadgetItemImage()") ; Change the current image of the specified item. 
  AddGadgetItem(functions, -1, "GetGadgetItemData()")  ; Returns the value that was stored With item. 
  AddGadgetItem(functions, -1, "SetGadgetItemData()")  ; Stores a value With the item. 
  AddGadgetItem(functions, -1, "GetGadgetItemColor()") ; Returns front Or backcolor of the item. 
  AddGadgetItem(functions, -1, "SetGadgetItemColor()") ; Changes front Or backcolor of the item. (Not supported on MacOS X) 
  AddGadgetItem(functions, -1, "GetGadgetState()")     ; Return the current selected item. 
  AddGadgetItem(functions, -1, "SetGadgetState()")     ; Change the currently selected item. 
  AddGadgetItem(functions, -1, "GetGadgetText()")      ; Return the text of the currently selected item. 
  AddGadgetItem(functions, -1, "SetGadgetText()")      ; Change the text of the currently selected item. 
  AddGadgetItem(functions, -1, "GetGadgetItemAttribute()") ; With the following attribute") ;
EndProcedure

Procedure Window_0_Events(event)
  Select event
    Case #PB_Event_CloseWindow
      ProcedureReturn #False

    Case #PB_Event_Menu
      Select EventMenu()
      EndSelect

    Case #PB_Event_Gadget
      Select EventGadget()
      EndSelect
  EndSelect
  
  ProcedureReturn #True
EndProcedure

OpenWindow_0()
Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
; IDE Options = PureBasic 5.70 LTS (MacOS X - x64)
; Folding = --
; EnableXP