XIncludeFile "widgets.pbi"
;
; This code is automatically generated by the FormDesigner.
; Manual modification is possible to adjust existing commands, but anything else will be dropped when the code is compiled.
; Event procedures needs to be put in another source file.
;

;- EXAMPLE
EnableExplicit
Uselib(widget)

Global window_ide, canvas_ide

Global Splitter_ide, Splitter_design, splitter_debug, Splitter_inspector, splitter_help
Global mdi_design, toolbar_design, listview_debug, text_help, tree_inspector,panel_inspector

Procedure window_ide_open(x=100,y=100,width=800,height=600)
  Define flag = #PB_Window_SystemMenu|#PB_Window_SizeGadget|#PB_Window_MaximizeGadget|#PB_Window_MinimizeGadget
  Define root = widget::Open(OpenWindow(#PB_Any, x,y,width,height, "ide", flag))
  window_ide = widget::GetWindow(root)
  canvas_ide = widget::GetGadget(root)
  
  toolbar_design = 0
  mdi_design = MDI(0,0,0,0) 
  AddItem(mdi_design, 0, "Form_0") 
  AddItem(mdi_design, 1, "Form_1")  
  AddItem(mdi_design, 2, "Form_2")
  
  tree_inspector = Tree(0,0,0,0)
  AddItem(tree_inspector, 0, "Form_0", 0, 0) 
  AddItem(tree_inspector, 1, "Form_1", 0, 0)  
  AddItem(tree_inspector, 2, "Form_2", 0, 0)
  
  listview_debug = Editor(0,0,0,0)
  AddItem(listview_debug, 0, "Form_0", 0, 0) 
  AddItem(listview_debug, 1, "Form_1", 0, 0)  
  AddItem(listview_debug, 2, "Form_2", 0, 0)
  
  panel_inspector = Panel(0,0,0,0)
  AddItem(panel_inspector, 0, "elements", 0, 0) 
  Button(0,0,0,0, "elements", #__flag_autosize)
  
  AddItem(panel_inspector, 1, "properties", 0, 0)  
  AddItem(panel_inspector, 2, "events", 0, 0)  
  CloseList()
  
  text_help  = Text(0,0,0,0, "help for the inspector", #__text_border)
  
  
  Splitter_design = widget::Splitter(0,0,0,0, toolbar_design,mdi_design, #PB_Splitter_FirstFixed|#PB_Splitter_Separator)
  Splitter_inspector = widget::Splitter(0,0,0,0, tree_inspector,panel_inspector, #PB_Splitter_FirstFixed)
  splitter_debug = widget::Splitter(0,0,0,0, Splitter_design,listview_debug, #PB_Splitter_SecondFixed)
  splitter_help = widget::Splitter(0,0,0,0, Splitter_inspector,text_help, #PB_Splitter_SecondFixed)
  Splitter_ide = widget::Splitter(0,0,0,0, splitter_debug,splitter_help, #__flag_autosize|#PB_Splitter_Vertical|#PB_Splitter_SecondFixed)
  
  ; set splitters default minimum size
  widget::SetAttribute(Splitter_ide, #PB_Splitter_FirstMinimumSize, 500)
  widget::SetAttribute(Splitter_ide, #PB_Splitter_SecondMinimumSize, 120)
  widget::SetAttribute(splitter_help, #PB_Splitter_SecondMinimumSize, 30)
  widget::SetAttribute(splitter_debug, #PB_Splitter_SecondMinimumSize, 100)
  widget::SetAttribute(Splitter_inspector, #PB_Splitter_FirstMinimumSize, 100)
  widget::SetAttribute(Splitter_design, #PB_Splitter_FirstMinimumSize, 20)
  ; widget::SetAttribute(Splitter_design, #PB_Splitter_SecondMinimumSize, $ffffff)
  
  ; set splitters dafault positions
  widget::SetState(Splitter_ide, widget::width(Splitter_ide)-220)
  widget::SetState(splitter_help, widget::height(splitter_help)-80)
  widget::SetState(splitter_debug, widget::height(splitter_debug)-150)
  widget::SetState(Splitter_inspector, 150)
  widget::SetState(Splitter_design, 30)
  
  ProcedureReturn window_ide
EndProcedure

Procedure window_ide_events(Event)
  Select event
      
  EndSelect
EndProcedure

CompilerIf #PB_Compiler_IsMainFile 
  Define event
  window_ide_open()
  
  Repeat 
    event = WaitWindowEvent() 
    
    Select EventWindow()
      Case window_ide 
        window_ide_events(event)
    EndSelect
    
  Until event = #PB_Event_CloseWindow
CompilerEndIf
; IDE Options = PureBasic 5.71 LTS (MacOS X - x64)
; Folding = -
; EnableXP